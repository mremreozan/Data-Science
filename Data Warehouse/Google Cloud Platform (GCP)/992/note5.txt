1-
Today, I will talk about Django. Django is 
a Python-based free and open-source web framework 
like Flask. We know Flask, I tell Django 
by comparing with Flask to easily understand.

2-
Django has an architecture which follows 
the MVT (model view template) approach of 
architectural pattern. Project layout 
must include all of these files. You can create 
a file structure with one django command. 
In this architecture, When a user requests 
for a resource, Django acts as a controller 
and checks if it is available. The URL works 
like a router to give permission for certain url. 
View interacts with the Model and renders 
a Template. Django sends back a Template 
to the user as a response if its request is 
available for model. The Model class holds 
essential fields and methods. 
For each model class, we have a table in the database. 
As you see, Django has a strict architecture. 
On the other hand, Flask makes no assumptions 
about how data is stored. If you customize 
the code yourself, Flask is pretty good option 
for you. It's much more flexible than Django.

3- 
Object-relational mapping is a programming technique 
used with object-oriented programming languages 
like python, java, php. If you're using 
a relational database, Django makes it much easier 
to get started because it has a built-in ORM. 
If, however, you're using a non-relational database 
or would like to use a different ORM like SQLAlchemy, 
Django will fight you almost every step of the way. 
On the other hand, Flask give you the freedom 
to pick and chose the ORM (or ODM) that works best 
with your application. Finally, If you uses SQLite, 
PostgreSQL, MySQL, or Oracle, you should take 
a hard look at Django. However, if you're using NoSQL 
or no database at all, then Flask is a solid choice.

4- 
Forms, another essential part of most web applications. 
Form normally include label and input rows. 
You see architecture of your django and flask 
showing same form in browser. In Django, this 
architecture comes with package. For Django, 
in index html page, you can not write label or 
input which is not in the Database. Django is 
bridging the gap between forms and the database 
directly thanks to model and form python file.  
Flask doesn't support forms by default. 
You can use html codes. If you want default form 
structure in Flask, it has some extension to do that.

5-

6-
Django uses its own functions and settings but 
Flask can use a lot of extensions to do that.

7-
If youâ€™re happy with most of those decisions 
and the defaults Django provides, you can have 
a relatively complex web application running 
in quite a short time. 
